{"version":3,"sources":["utils.tsx","LinkSections.tsx","config.ts","SearchBar.tsx","Clock.tsx","StaticLinks.tsx","HomeSearch.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["getValidURL","link","test","ls","window","localStorage","parseQueryString","queryString","location","search","values","qs","parse","qmarkKey","Object","keys","find","elt","startsWith","tmp","slice","useQueryString","key","initialValue","useState","getQueryStringValue","value","setValue","useCallback","newValue","parsed","newurl","protocol","host","pathname","length","stringify","history","pushState","path","setQueryString","styled","i","attrs","props","className","checked","create","set","loggedIn","setLoggedIn","val","addTask","setAddTask","a","SectionContainer","div","LinksWrapper","Section","title","children","id","Link","LinkSections","query","setAction","defaultValue","cached","getItem","JSON","data","setData","useEffect","setItem","useCached","sites","setSites","sections","setSections","selected","setSelected","totalMatched","setTotalMatched","fetch","then","res","json","catch","err","console","error","document","documentElement","style","setProperty","Math","max","map","category","updateSections","newSelected","newSections","pos","matches","forEach","idx","links","filtered","filter","name","toLowerCase","includes","push","isSelected","href","isURL","match","onKeyDown","e","addEventListener","removeEventListener","SearchInput","input","SearchBar","text","setText","action","useRef","updateTitle","start","blurCallback","bind","focusCallback","onSubmit","preventDefault","assign","encodeURIComponent","type","ref","autoFocus","autoComplete","onChange","target","Wrapper","DateSpan","span","TimeSpan","Clock","Date","date","setDate","timer","setInterval","clearInterval","dayjs","format","StaticLinksContainer","StaticLink","StaticLinks","MainContainer","HomeSearch","setQuery","useResizeDetector","height","undefined","parseInt","getComputedStyle","getPropertyValue","App","min","floor","random","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.21d7052b.chunk.js","sourcesContent":["import {\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport qs from 'querystring';\nimport create from 'zustand';\nimport { Task } from './config';\nimport styled from 'styled-components';\n\ntype Arr = readonly unknown[];\nexport function partial<T extends Arr, U extends Arr, R>(\n  f: (...args: [...T, ...U]) => R,\n  ...headArgs: T\n) {\n  return (...tailArgs: U) => f(...headArgs, ...tailArgs);\n}\n\nexport function getValidURL(link: string): string {\n  return /^https?:\\/\\//.test(link) ? link : `//${link}`;\n}\n\nconst ls = window.localStorage;\n\nexport function useCached<T>(\n  key: string,\n  defaultValue: T,\n): [T, Dispatch<SetStateAction<T>>] {\n  const [data, setData] = useState<T>(() => {\n    const cached = ls.getItem(key);\n    return cached !== null ? JSON.parse(cached) : defaultValue;\n  });\n\n  useEffect(() => {\n    ls.setItem(key, JSON.stringify(data));\n  }, [data, key]);\n\n  return [data, setData];\n}\n\nfunction parseQueryString(queryString = window.location.search) {\n  const values = qs.parse(queryString);\n\n  // Remove leading qmark from first query param\n  const qmarkKey = Object.keys(values).find((elt) => elt.startsWith('?'));\n  if (qmarkKey) {\n    const tmp = values[qmarkKey];\n    delete values[qmarkKey];\n    values[qmarkKey.slice(1)] = tmp;\n  }\n  return values;\n}\n\nfunction setQueryString(key: string, value: any) {\n  const parsed = parseQueryString();\n  if (key in parsed && !value) delete parsed[key];\n  else parsed[key] = value;\n\n  const newurl =\n    window.location.protocol +\n    '//' +\n    window.location.host +\n    window.location.pathname +\n    `${Object.keys(parsed).length ? '?' : ''}${qs.stringify(parsed)}`;\n\n  window.history.pushState({ path: newurl }, '', newurl);\n}\n\nfunction getQueryStringValue(key: string) {\n  return parseQueryString()[key];\n}\n\nexport function useQueryString(key: string, initialValue: any) {\n  const [value, setValue] = useState(getQueryStringValue(key) || initialValue);\n  const onSetValue = useCallback(\n    (newValue) => {\n      setValue(newValue);\n      setQueryString(key, newValue);\n    },\n    [key],\n  );\n\n  return [value, onSetValue];\n}\n\ntype CheckboxProps = { checked: boolean };\n\nexport const Checkbox = styled.i.attrs<CheckboxProps>((props) => ({\n  className: props.checked ? 'fas fa-check-square' : 'fas fa-square',\n}))<CheckboxProps>`\n  margin: 12px 10px 0px 15px;\n\n  transform: scale(1.35);\n\n  color: var(--frg-l);\n\n  &:hover {\n    color: var(--frg-ll);\n  }\n`;\n\nexport const TrashIcon = styled.i.attrs({ className: 'far fa-trash-alt fa-lg' })`\n  padding: 13px 10px;\n\n  color: var(--frg-l);\n\n  &:hover {\n    color: var(--frg-ll);\n  }\n`;\n\n// Context stuff\n\nexport const useLogin = create<{\n  loggedIn: boolean;\n  setLoggedIn: (val: boolean) => void;\n}>((set) => ({\n  loggedIn: false,\n  setLoggedIn: (val) => set({ loggedIn: val }),\n}));\n\ntype AddTask = (t: Task) => void;\nexport const useAddTask = create<{\n  addTask: AddTask;\n  setAddTask: (a: AddTask) => void;\n}>((set) => ({\n  addTask: () => {},\n  setAddTask: (a) => set({ addTask: a }),\n}));\n","import { useCallback, useEffect, useState } from 'react';\nimport isURL from 'validator/lib/isURL';\nimport { Sites, option, SITES_DATA_URL } from './config';\nimport { getValidURL, useCached } from './utils';\nimport styled from 'styled-components';\n\nconst SectionContainer = styled.div`\n  vertical-align: top;\n\n  display: inline-block;\n\n  overflow: hidden;\n\n  box-sizing: border-box;\n  margin: 2px;\n  height: var(--section-height);\n  width: var(--section-width);\n\n  background-color: var(--hdr);\n\n  text-align: left;\n  color: var(--htx);\n\n  &:before {\n    content: '';\n    margin-left: 5px;\n  }\n`;\n\nconst LinksWrapper = styled.div`\n  padding: 10px 15px 15px 10px;\n\n  height: 100%;\n\n  background-color: var(--frg);\n`;\n\nfunction Section({\n  title,\n  children,\n}: {\n  title: string;\n  children: JSX.Element[];\n}) {\n  return children.length ? (\n    <SectionContainer id={title}>\n      {title}\n      <LinksWrapper>{children}</LinksWrapper>\n    </SectionContainer>\n  ) : (\n    <></>\n  );\n}\n\nconst Link = styled.a`\n  margin-bottom: var(--link-margin);\n  padding-left: 5px;\n\n  display: block;\n\n  color: var(--txt);\n  text-decoration: none;\n\n  &:hover,\n  &.selected {\n    background-color: rgba(255, 255, 255, 0.05);\n\n    color: var(--hgl);\n  }\n`;\n\nexport default function LinkSections({\n  query,\n  setAction,\n}: {\n  query: string;\n  setAction: (s: option<string>) => void;\n}) {\n  const [sites, setSites] = useCached<option<Sites>>('sites', null);\n  const [sections, setSections] = useState<JSX.Element[]>([]);\n  const [selected, setSelected] = useState<option<number>>(null);\n  const [totalMatched, setTotalMatched] = useState(0);\n\n  useEffect(() => {\n    fetch(SITES_DATA_URL)\n      .then((res) => res.json())\n      .then((data) => setSites(data))\n      .catch((err) => console.error(err));\n  }, [setSites]);\n\n  useEffect(() => {\n    if (sites !== null)\n      document.documentElement.style.setProperty(\n        '--max-links',\n        `${Math.max(\n          ...Object.keys(sites).map(\n            (category) => Object.keys(sites[category]).length,\n          ),\n        )}`,\n      );\n  }, [sites]);\n\n  const updateSections = useCallback(\n    function (newSelected: option<number>) {\n      if (sites === null) return;\n\n      const newSections: JSX.Element[] = [];\n      let pos = 0,\n        matches = false;\n      Object.keys(sites).forEach((category, idx) => {\n        const links = sites[category];\n        const filtered = Object.keys(links).filter((name) =>\n          name.toLowerCase().includes(query),\n        );\n\n        if (filtered.length) {\n          matches = true;\n          newSections.push(\n            <Section key={idx} title={category}>\n              {filtered.map((name, idx) => {\n                const isSelected = pos++ === newSelected;\n                if (isSelected) setAction(links[name]);\n\n                return (\n                  <Link\n                    key={idx}\n                    href={getValidURL(links[name])}\n                    className={isSelected ? 'selected' : ''}\n                  >\n                    {name}\n                  </Link>\n                );\n              })}\n            </Section>,\n          );\n        }\n      });\n      setTotalMatched(pos);\n      setSections(newSections);\n      setSelected(newSelected);\n      if (!matches || !query.length) setAction(null);\n    },\n    [query, sites, setAction],\n  );\n\n  useEffect(() => {\n    if (\n      isURL(query) ||\n      /^(https?)?:\\/\\/localhost:\\d{1,5}([^\\d].*)?$/g.test(query)\n    ) {\n      setAction(query);\n      return;\n    }\n    if (\n      query.match(/^lh\\d{3,5}$/) !== null ||\n      query.match(/^localhost:\\d{3,5}$/) !== null\n    ) {\n      setAction(\n        `http://localhost:${(query.match(/\\d{3,5}/) as RegExpMatchArray)[0]}`,\n      );\n      return;\n    }\n    // Assemble list of sections based on query\n    updateSections(query.length ? 0 : null);\n  }, [query, setAction, updateSections]);\n\n  useEffect(() => {\n    function onKeyDown(e: KeyboardEvent) {\n      let newSelected = selected;\n      if (e.key === 'ArrowUp' || e.key === 'ArrowLeft') {\n        if (selected !== null && selected > 0) newSelected = selected - 1;\n      } else if (e.key === 'ArrowDown' || e.key === 'ArrowRight') {\n        if (selected !== null && selected < totalMatched)\n          newSelected = selected + 1;\n      }\n      if (newSelected !== selected) updateSections(newSelected);\n    }\n    document.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', onKeyDown);\n    };\n  }, [selected, totalMatched, updateSections]);\n\n  return <div id=\"links\">{sections}</div>;\n}\n","export const PAGE_HUE_MIN = 10;\nexport const PAGE_HUE_MAX = 360;\n\nexport const DEFAULT_TAB_TITLE = '🏠 Home';\nexport const SEARCH_TAB_PREFIX = '🔍';\nexport const NOTE_TAB_PREFIX = '📝';\n\nexport const DEFAULT_SEARCH_URL = 'https://google.com/search';\n\nexport const SITES_DATA_URL =\n  'https://gist.githubusercontent.com/bryannasolorzano/872899233dfe58bbac5c40d5bd8881ff/raw';\n\nexport const TASK_UPDATE_DELAY = 500; // ms\n\nexport type option<T> = T | null;\n\nexport type Sites = { [k: string]: { [k: string]: string } };\n\nexport type TaskLinks = gapi.client.Tasks.Schema.TaskLinks;\nexport type TaskList = gapi.client.Tasks.Schema.TaskList;\nexport type TaskLists = gapi.client.Tasks.Schema.TaskLists;\nexport type Tasks = gapi.client.Tasks.Schema.Tasks;\nexport type Task = gapi.client.Tasks.Schema.Task;\n","import { useCallback, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport {\n  DEFAULT_SEARCH_URL,\n  DEFAULT_TAB_TITLE,\n  NOTE_TAB_PREFIX,\n  option,\n  SEARCH_TAB_PREFIX,\n} from './config';\nimport { getValidURL } from './utils';\n\nconst SearchInput = styled.input`\n  margin: 0px 2px 2px 2px;\n  padding-left: 5px;\n  box-sizing: border-box;\n\n  border: none;\n  width: var(--lwidth);\n  height: 50px;\n\n  font-size: 40px;\n  background-color: var(--frg);\n  color: var(--txt);\n  font-family: Terminus, Montserrat;\n\n  &:focus {\n    outline: none;\n  }\n\n  @media screen and (max-width: 912px) {\n    & {\n      width: var(--mwidth);\n    }\n  }\n\n  @media screen and (max-width: 608px) {\n    & {\n      width: var(--swidth);\n    }\n  }\n`;\n\nexport default function SearchBar({\n  text,\n  setText,\n  action,\n}: {\n  text: string;\n  setText: (s: string) => void;\n  action: option<string>;\n}) {\n  const input = useRef<HTMLInputElement>(null);\n\n  // useEffect(() => {\n  //   // Clikcing on anything except a link will focus the search bar\n  //   (document.querySelector('body') as HTMLBodyElement).onclick = (e) => {\n  //     if (input && input.current) input.current.focus();\n  //   };\n  // }, [input]);\n\n  const updateTitle = useCallback(\n    (start: string) => {\n      if (text.length) document.title = `${start} - ${text}`;\n      else document.title = DEFAULT_TAB_TITLE;\n    },\n    [text],\n  );\n\n  useEffect(() => {\n    updateTitle(SEARCH_TAB_PREFIX);\n  }, [text, updateTitle]);\n\n  useEffect(() => {\n    const blurCallback = updateTitle.bind(null, NOTE_TAB_PREFIX),\n      focusCallback = updateTitle.bind(null, SEARCH_TAB_PREFIX);\n\n    window.addEventListener('blur', blurCallback);\n    window.addEventListener('focus', focusCallback);\n\n    return () => {\n      window.removeEventListener('blur', blurCallback);\n      window.removeEventListener('focus', focusCallback);\n    };\n  }, [updateTitle]);\n\n  return (\n    <>\n      <form\n        id={'action'}\n        onSubmit={(e) => {\n          e.preventDefault();\n          window.location.assign(\n            action !== null\n              ? getValidURL(action)\n              : `${DEFAULT_SEARCH_URL}?q=${encodeURIComponent(text)}`,\n          );\n        }}\n      >\n        <SearchInput\n          type=\"text\"\n          value={text}\n          ref={input}\n          autoFocus\n          autoComplete=\"off\"\n          onChange={(e) => setText(e.target.value)}\n        />\n       </form>\n    </>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport dayjs from 'dayjs';\n\nconst Wrapper = styled.div`\n  width: 180px;\n\n  margin-right: auto;\n\n  display: flex;\n`;\n\nconst DateSpan = styled.span`\n  align-self: flex-start;\n\n  color: var(--htx);\n`;\n\nconst TimeSpan = styled(DateSpan)`\n  margin-right: auto;\n\n  align-self: flex-end;\n`;\n\nexport default function Clock() {\n  const [date, setDate] = useState(new Date());\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return (\n    <>\n      <Wrapper>\n        <TimeSpan id=\"clock\">{dayjs(date).format('HH:mm:ss')}</TimeSpan>\n        <DateSpan id=\"date\">{dayjs(date).format('ddd, MMM D')}</DateSpan>\n      </Wrapper>\n    </>\n  );\n}\n","import Clock from './Clock';\nimport styled from 'styled-components';\n\nconst StaticLinksContainer = styled.div`\n  margin: 2px 2px 0 2px;\n  box-sizing: border-box;\n\n  display: flex;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  align-items: center;\n\n  padding: 0 5px;\n  width: var(--lwidth);\n\n  background-color: var(--hdr);\n\n  color: var(--txt);\n  font-size: 16px;\n  line-height: 30px;\n\n  @media screen and (max-width: 912px) {\n    & {\n      width: var(--mwidth);\n      margin: 2px auto 0 auto;\n    }\n  }\n\n  @media screen and (max-width: 608px) {\n    & {\n      width: var(--swidth);\n    }\n  }\n`;\n\nconst StaticLink = styled.a`\n  color: var(--htx);\n  text-decoration: none;\n\n  &:hover {\n    color: var(--txt);\n  }\n\n  & + & {\n    margin-left: 15px;\n  }\n\n  @media screen and (max-width: 608px) {\n    &:first-of-type {\n      margin-left: 110px;\n    }\n  }\n`;\n\nexport default function StaticLinks() {\n  const links = ['Spotify'];\n\n  return (\n    <StaticLinksContainer id=\"static-links\">\n      <Clock />\n      {links.map((link, idx) => (\n        <StaticLink key={idx} href={link.toLowerCase() + ':'}>\n          {link}\n        </StaticLink>\n      ))}\n    </StaticLinksContainer>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useResizeDetector } from 'react-resize-detector';\nimport { option } from './config';\nimport LinkSections from './LinkSections';\nimport SearchBar from './SearchBar';\nimport StaticLinks from './StaticLinks';\nimport styled from 'styled-components';\nimport { useQueryString } from './utils';\n\nconst MainContainer = styled.div`\n  // transition: 0.2s height;\n\n  max-width: 912px;\n\n  user-select: none;\n  text-align: center;\n`;\n\nexport default function HomeSearch() {\n  const [query, setQuery] = useQueryString('q', '');\n  const [action, setAction] = useState<option<string>>(null);\n  const { height, ref } = useResizeDetector();\n\n  useEffect(() => {\n    if (\n      height !== undefined &&\n      height >\n        parseInt(\n          getComputedStyle(document.documentElement)\n            .getPropertyValue('--homesearch-height')\n            .slice(0, -2),\n        )\n    )\n      document.documentElement.style.setProperty(\n        '--homesearch-height',\n        `${height}px`,\n      );\n  }, [height]);\n\n  return (\n    <MainContainer id=\"main\" ref={ref}>\n      <StaticLinks />\n      <SearchBar text={query} setText={setQuery} action={action} />\n      <LinkSections query={query} setAction={setAction} />\n    </MainContainer>\n  );\n}\n","import { useEffect } from 'react';\nimport HomeSearch from './HomeSearch';\nimport { PAGE_HUE_MAX, PAGE_HUE_MIN } from './config';\n\nexport default function App() {\n  useEffect(() => {\n    function random(min: number, max: number) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n\n    // Choose a random page color base on page load\n    document.documentElement.style.setProperty(\n      '--base',\n      `${random(PAGE_HUE_MIN, PAGE_HUE_MAX)}`,\n    );\n  }, []);\n\n  return (\n    <>\n      <HomeSearch />\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.css';\nimport './daypicker.css';\nimport { unregister } from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nunregister();\n"],"sourceRoot":""}